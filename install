#!/usr/bin/env python3

'''
PROGRAM: Configuration Installer
DESCRIPTION: Installs dot files when creating a fresh Linux install.
AUTHOR: John Higgins
'''

import sys
import os
from os import path
import subprocess as sp

DOT_DIR='dot/'

def main():
    logger = Logger()
    logger.log(Logger.INFO_LEVEL, 'STARTING INSTALLATION...')
    force = False

    if len(sys.argv) > 1:
        force = sys.argv[1] == '--force' or sys.argv[1] == '-f'

    home_dir = os.getenv('HOME')
    cwd = os.getcwd()
    dots = path.join(cwd, DOT_DIR)

    dot_paths = [path.join(dots, f) for f in os.listdir(dots)]
    dot_dest = [path.join(home_dir, path.basename(d)) for d in os.listdir(dots)]

    for i in range(0, len(dot_dest)):
        link(dot_paths[i], dot_dest[i], force)

    logger.log(Logger.INFO_LEVEL, 'COMPLETED INSTALLATION!')


# create a symlink.
def link(source, destination, force=False):
    logger = Logger()
    proc = None

    if force:
        proc = sp.run(args=['ln', '-sf', source, destination], stdout=sp.PIPE, stderr=sp.PIPE)
    else:
        proc = sp.run(args=['ln', '-s', source, destination], stdout=sp.PIPE, stderr=sp.PIPE)

    if proc.returncode == 0:
        logger.log(Logger.INFO_LEVEL, 'LINKED \'%s\' → \'%s\'' %(source, destination))
    else:
        logger.log(Logger.ERROR_LEVEL, 'FAILED TO LINK \'%s\' → \'%s\'' %(source, destination))


class Logger:
    INFO_LEVEL = 0
    WARN_LEVEL = 1
    ERROR_LEVEL = 2

    def __init__(self):
        pass

    def log(self, level, msg):
        print('%s ' %(self.level_ansi(level)), end='')
        print(msg)
        self.reset_color()


    def reset_color(self):
        return '\033[0m'


    # Configure color based on logging level.
    def level_ansi(self, level):
        if level == Logger.INFO_LEVEL:
            return f'[\033[32mINFO{self.reset_color()}]'
        elif level == Logger.WARN_LEVEL:
            return f'[\033[33mWARN{self.reset_color()}]'
        else:
            return f'[\033[31mERROR{self.reset_color()}]'


if __name__ == '__main__':
    main()
